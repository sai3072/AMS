<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_109369_ams_rfcs</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>POC Create Rfc</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var amsRfc= new AMSRfcFetch();
	var changeTypeId=current.u_rfcs_change_type_id;
	var changeTypeVersion;
	gs.info('POC Create Rfc>>> changeTypeId = ' + changeTypeId );
	// 	var startDate;
	// 	var gdt= new GlideDateTime();
	// 	startDate= new Date(gdt.getNumericValue());
	// 	var addedmin = new GlideTime();
	// 	addedmin.setValue("00:10:00");
	// 	gdt.add(addedmin);
	// 	startDate=new Date(gdt.getNumericValue());
	// 	var addedHour = new GlideTime();
	// 	addedHour.setValue("01:00:00");
	// 	gdt.add(addedHour);
	// 	var endDate = new Date(gdt.getNumericValue());
	if(changeTypeId!=null && changeTypeId!=undefined){
		var rfcJson= JSON.parse(current.u_rfcs_execution_parameters);
		//var startDate=rfcJson.requestedStartTime;
		//var startDate =new Date(rfcJson.requestedStartTime);
		//startDate.setHours(startDate.getHours()+1);
		//var endDate= startDate.toJSON();
		gs.info('POC Create Rfc>>> rfcJson = ' + JSON.stringify(rfcJson) );
		//var basicexecutionParams = JSON.parse(rfcJson.basicexecutionParameters);
		//gs.info('POC Create Rfc>>> basicexecutionParams = ' + JSON.stringify(basicexecutionParams)  );
		//var advancedexecutionParams=JSON.parse(rfcJson.advancedexecutionParameters);
		//gs.info('POC Create Rfc>>> advancedexecutionParams = ' + JSON.stringify(advancedexecutionParams)  );
		//var params;
		
		// 					var rfcJson= JSON.parse(current.u_rfcs_execution_parameters);
		// 						if(changeTypeId=='ct-1e1xtak34nx76'||changeTypeId=='ct-0xdawir96cy7k'){ //Management  Other Other create
			// 							executionParams= {
				// 								"Comment":rfcJson.executionParameters.Comment,
				// 								"Priority":rfcJson.executionParameters.Priority
				// 							};
				// 						}
				var params;
				var gr = new GlideRecord('x_109369_ams_changetype_version');
				gr.addQuery('u_rfc_change_type_version_changetypeid',changeTypeId);
				gr.query();
				if(gr.next())
					{
					changeTypeVersion=gr.u_rfc_change_type_version_version.toString();
					params=JSON.parse(gr.u_rfc_change_type_version_parameters);
					//gs.info('POC Create Rfc>>> u_rfc_change_type_version_parameters = ' + JSON.stringify(params, null, 2) );
					Object.keys(params).forEach(function(key) {
						params[key]=rfcJson[key];
						if(key == 'StackTemplateId') params["StackTemplateId"] = rfcJson[key];
							
						gs.info('POC Create Rfc>>> key = ' + key + ', params[key] = ' + params[key] + ' , ' + typeof(rfcJson[key]));
					});
					gs.info(JSON.stringify(params));
					gs.info('POC Create Rfc>>> params' + JSON.stringify(params));
				}
				var executionParams =params;
				var jsonParam=JSON.stringify(executionParams);
				gs.info('POC Create Rfc>>> jsonParam' + jsonParam);
				var isRfcCreated = amsRfc.createRfc(
				rfcJson.description,
				rfcJson.expectedoutcome,
				rfcJson.implementationplan,
				rfcJson.requestedStartTime,//startDate.toJSON(),// requesttedStartTime,
				rfcJson.requestedEndTime,//rfcJson.requestedStartTime,//endDate.toJSON(), // requesttedEndTime,
				rfcJson.rollbackplan,
				rfcJson.Subject,
				rfcJson.worstcasesscenario,
				changeTypeId.toString(),
				changeTypeVersion,
				jsonParam ) ;
				current.u_rfcs_id=isRfcCreated;
				if(isRfcCreated!=false){
					gs.addInfoMessage("Rfc created "+isRfcCreated);
					amsRfc.submitRfc(current.u_rfcs_id.toString());
					current.update();
				}
				else{
					gs.addErrorMessage('Rfc creation failed');
					//current.setAbortAction(true);
				}
			}
			else{
				gs.addErrorMessage('No Change Type Id Found');
				//current.setAbortAction(true);
			}
		})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>sahitya</sys_created_by>
        <sys_created_on>2017-05-17 07:14:30</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a698129ddbbab200ef73d8c0cf961994</sys_id>
        <sys_mod_count>66</sys_mod_count>
        <sys_name>POC Create Rfc</sys_name>
        <sys_overrides/>
        <sys_package display_value="AMS" source="x_109369_ams">5b693bf9db427200ef73d8c0cf961927</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AMS">5b693bf9db427200ef73d8c0cf961927</sys_scope>
        <sys_update_name>sys_script_a698129ddbbab200ef73d8c0cf961994</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-05-30 05:03:56</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=a698129ddbbab200ef73d8c0cf961994"/>
</record_update>
